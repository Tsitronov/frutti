{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      await callback();\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFetching, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");","map":{"version":3,"names":["useState","useFetching","callback","_s","isLoading","setIsLoading","error","setError","fetching","e","message"],"sources":["/home/evgenii/Desktop/frutti/client/src/hooks/useFetching.js"],"sourcesContent":["import {useState} from 'react'\r\n\r\nexport const useFetching = (callback) => {\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [error, setError] = useState('')\r\n\r\n\tconst fetching = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true)\r\n\t\t\tawait callback()\r\n\t\t} catch (e) {\r\n\t\t\tsetError(e.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\treturn [fetching, isLoading, error]\r\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACHH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMH,QAAQ,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOO,CAAC,EAAE;MACXF,QAAQ,CAACE,CAAC,CAACC,OAAO,CAAC;IACpB,CAAC,SAAS;MACTL,YAAY,CAAC,KAAK,CAAC;IACpB;EACD,CAAC;EACD,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACpC,CAAC;AAAAH,EAAA,CAfYF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}