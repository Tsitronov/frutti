{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst URL = 'https://frutti-backend.onrender.com/frutti';\n\n// 📥 Carica frutti dal server\nexport const fetchFrutti = createAsyncThunk('frutti/fetchFrutti', async () => {\n  const res = await axios.get(URL);\n  return res.data;\n});\n\n// ➕ Aggiungi nuovo frutto\nexport const aggiungiFrutto = createAsyncThunk('frutti/aggiungiFrutto', async frutto => {\n  const res = await axios.post(URL, frutto);\n  return res.data;\n});\n\n// ❌ Elimina frutto\nexport const eliminaFrutto = createAsyncThunk('frutti/eliminaFrutto', async id => {\n  await axios.delete(`${URL}/${id}`);\n  return id;\n});\n\n// ✏️ Modifica frutto\nexport const modificaFrutto = createAsyncThunk('frutti/modificaFrutto', async frutto => {\n  const res = await axios.put(`${URL}/${frutto.id}`, frutto);\n  return res.data;\n});\nconst fruttiSlice = createSlice({\n  name: 'frutti',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchFrutti.fulfilled, (state, action) => {\n      return action.payload;\n    }).addCase(aggiungiFrutto.fulfilled, (state, action) => {\n      state.push(action.payload);\n    }).addCase(eliminaFrutto.fulfilled, (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    }).addCase(modificaFrutto.fulfilled, (state, action) => {\n      const index = state.findIndex(i => i.id === action.payload.id);\n      if (index !== -1) {\n        state[index] = action.payload;\n      }\n    });\n  }\n});\nexport default fruttiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","URL","fetchFrutti","res","get","data","aggiungiFrutto","frutto","post","eliminaFrutto","id","delete","modificaFrutto","put","fruttiSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","filter","item","index","findIndex","i","reducer"],"sources":["/home/evgenii/Desktop/frutti/client/src/redux/fruttiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst URL = 'https://frutti-backend.onrender.com/frutti';\n\n// 📥 Carica frutti dal server\nexport const fetchFrutti = createAsyncThunk('frutti/fetchFrutti', async () => {\n  const res = await axios.get(URL);\n  return res.data;\n});\n\n// ➕ Aggiungi nuovo frutto\nexport const aggiungiFrutto = createAsyncThunk('frutti/aggiungiFrutto', async (frutto) => {\n  const res = await axios.post(URL, frutto);\n  return res.data;\n});\n\n// ❌ Elimina frutto\nexport const eliminaFrutto = createAsyncThunk('frutti/eliminaFrutto', async (id) => {\n  await axios.delete(`${URL}/${id}`);\n  return id;\n});\n\n// ✏️ Modifica frutto\nexport const modificaFrutto = createAsyncThunk('frutti/modificaFrutto', async (frutto) => {\n  const res = await axios.put(`${URL}/${frutto.id}`, frutto);\n  return res.data;\n});\n\nconst fruttiSlice = createSlice({\n  name: 'frutti',\n  initialState: [],\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchFrutti.fulfilled, (state, action) => {\n        return action.payload;\n      })\n      .addCase(aggiungiFrutto.fulfilled, (state, action) => {\n        state.push(action.payload);\n      })\n      .addCase(eliminaFrutto.fulfilled, (state, action) => {\n        return state.filter(item => item.id !== action.payload);\n      })\n      .addCase(modificaFrutto.fulfilled, (state, action) => {\n        const index = state.findIndex(i => i.id === action.payload.id);\n        if (index !== -1) {\n          state[index] = action.payload;\n        }\n      });\n  }\n});\n\nexport default fruttiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,4CAA4C;;AAExD;AACA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC5E,MAAMI,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,GAAG,CAAC;EAChC,OAAOE,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAAC,uBAAuB,EAAE,MAAOQ,MAAM,IAAK;EACxF,MAAMJ,GAAG,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAACP,GAAG,EAAEM,MAAM,CAAC;EACzC,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,aAAa,GAAGV,gBAAgB,CAAC,sBAAsB,EAAE,MAAOW,EAAE,IAAK;EAClF,MAAMV,KAAK,CAACW,MAAM,CAAC,GAAGV,GAAG,IAAIS,EAAE,EAAE,CAAC;EAClC,OAAOA,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,cAAc,GAAGb,gBAAgB,CAAC,uBAAuB,EAAE,MAAOQ,MAAM,IAAK;EACxF,MAAMJ,GAAG,GAAG,MAAMH,KAAK,CAACa,GAAG,CAAC,GAAGZ,GAAG,IAAIM,MAAM,CAACG,EAAE,EAAE,EAAEH,MAAM,CAAC;EAC1D,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;AAEF,MAAMS,WAAW,GAAGhB,WAAW,CAAC;EAC9BiB,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,WAAW,CAACmB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjD,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC,CACDJ,OAAO,CAACd,cAAc,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACG,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDJ,OAAO,CAACX,aAAa,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnD,OAAOD,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACjB,EAAE,KAAKa,MAAM,CAACC,OAAO,CAAC;IACzD,CAAC,CAAC,CACDJ,OAAO,CAACR,cAAc,CAACS,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpD,MAAMK,KAAK,GAAGN,KAAK,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKa,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC;MAC9D,IAAIkB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBN,KAAK,CAACM,KAAK,CAAC,GAAGL,MAAM,CAACC,OAAO;MAC/B;IACF,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,WAAW,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}